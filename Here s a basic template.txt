Here's a basic template for your `README.md` file based on the structure of your project. You can customize the sections further as needed.

---

# Movie Watchlist

A full-stack web application for managing a watchlist of movies, built with Flask and MySQL for the backend and React with Vite for the frontend.

## Table of Contents

- [Project Overview](#project-overview)
- [Technologies Used](#technologies-used)
- [Project Structure](#project-structure)
- [Backend Setup](#backend-setup)
- [Frontend Setup](#frontend-setup)
- [Running the Project Locally](#running-the-project-locally)
- [Contributing](#contributing)
- [License](#license)

## Project Overview

Movie Watchlist is a web application that allows users to manage a list of movies they plan to watch. It features a Flask backend that communicates with a MySQL database, and a modern frontend built with React and Vite.

## Technologies Used

### Backend
- Flask
- GraphQL
- MySQL
- SQLAlchemy

### Frontend
- React (with Hooks)
- Vite
- JavaScript (ES6+)
- Axios (for API requests)

### Other Tools
- Virtualenv (Python virtual environment)
- Node.js & npm
- GraphiQL (for interacting with the GraphQL API)

## Project Structure

```bash
project/
│
├── backend/
│   ├── venv/                    # Virtual environment
│   ├── app.py                   # Main Flask application
│   ├── config.py                # Configuration settings for Flask and MySQL
│   ├── models.py                # Database models (SQLAlchemy ORM or raw queries)
│   ├── routes/                  # Folder for API route handlers
│   │   └── api.py               # API routes (endpoints)
│   ├── static/                  # Folder for static assets like images, CSS, etc.
│   ├── templates/               # If you want to serve HTML from Flask
│   └── requirements.txt         # Python dependencies
│
├── frontend/
│   ├── src/
│   │   ├── components/          # React components
│   │   ├── App.jsx              # Main React app component
│   │   ├── index.jsx            # Entry point for the React app
│   │   └── vite.config.js       # Vite configuration file
│   ├── public/                  # Static assets served by Vite (e.g., favicon)
│   ├── package.json             # Node.js dependencies and scripts
│   └── .env                     # Environment variables for frontend
│
└── README.md                    # Project documentation
```

## Backend Setup

### Prerequisites

- Python 3.7+
- MySQL

### Installation

1. **Clone the repository:**

   ```bash
   git clone https://github.com/hawk1509/MovieWatchlist.git
   cd MovieWatchlist/backend
   ```

2. **Set up a virtual environment:**

   ```bash
   python -m venv venv
   source venv/bin/activate   # On Windows: venv\Scripts\activate
   ```

3. **Install dependencies:**

   ```bash
   pip install -r requirements.txt
   ```

4. **Set up MySQL:**

   - Create a MySQL database.
   - Update the `config.py` file with your database connection settings (user, password, database name, etc.).

5. **Run the backend server:**

   ```bash
   flask run
   ```

   By default, it runs on `http://localhost:5000`.

### GraphQL Endpoint

The GraphQL endpoint is available at:

```
http://localhost:5000/graphql
```

You can use GraphiQL to interact with your GraphQL API.

## Frontend Setup

### Prerequisites

- Node.js (v16+)
- npm or yarn

### Installation

1. **Navigate to the frontend folder:**

   ```bash
   cd ../frontend
   ```

2. **Install dependencies:**

   ```bash
   npm install
   ```

3. **Run the development server:**

   ```bash
   npm run dev
   ```

   By default, the frontend runs on `http://localhost:5173`.

### Environment Variables

Create a `.env` file in the frontend directory to store environment-specific variables (like the API base URL).

## Running the Project Locally

To run both the frontend and backend locally:

1. Start the Flask backend:
   ```bash
   cd backend
   source venv/bin/activate   # Or venv\Scripts\activate on Windows
   flask run
   ```

2. In a new terminal, start the React frontend:
   ```bash
   cd frontend
   npm run dev
   ```

Now, visit `http://localhost:5173` to see the React frontend and interact with the backend API.

## Contributing

Contributions are welcome! To contribute:

1. Fork the repository.
2. Create a new branch (`git checkout -b feature-name`).
3. Make your changes and commit them (`git commit -m 'Add new feature'`).
4. Push to the branch (`git push origin feature-name`).
5. Open a pull request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

---

Feel free to modify the README to suit your project better!
